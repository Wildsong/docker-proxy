version: "3.6"
services:
  proxy:
    # Runs jwilder's docker-gen to watch the docker API
    # and generate a proxy automatically for each web server that is started.
    # You have to set VIRTUAL_HOST for each web server to trigger it
    container_name: proxy
    image: jwilder/nginx-proxy:alpine
    networks:
      - proxy_net
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      DHPARAM_GENERATION: "true"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ${PWD}/network_internal.conf:/etc/nginx/network_internal.conf
      # Shared with letsencrypt
      - proxy_conf:/etc/nginx/conf.d
      - ./vhost.d:/etc/nginx/vhost.d
      - proxy_dhparam:/etc/nginx/dhparam
      - proxy_certs:/etc/nginx/certs:ro
    restart: unless-stopped

  letsencrypt:
    # Companion that manages our Let's Encrypt certificates for us.
    # It will create new certs automatically whenever a new server comes online.
    container_name: proxy-letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.12
    networks:
      - proxy_net
    depends_on:
      - proxy
    environment:
      NGINX_PROXY_CONTAINER: proxy
      DHPARAM_GENERATION: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Shared with letsencrypt
      - proxy_conf:/etc/nginx/conf.d
      - proxy_vhost:/etc/nginx/vhost.d
      - proxy_dhparam:/etc/nginx/dhparam
      - proxy_certs:/etc/nginx/certs:rw

# If you don't use the "name" feature you will get those stupid
# docker-compose name prefixes like proxy-proxy_conf
volumes:
  proxy_conf:
    name: proxy_conf
  proxy_dhparam:
    name: proxy_dhparam
  proxy_certs:
    name: proxy_certs
  proxy_vhost:
    name: proxy_vhost

networks:
  # Any services that want to be proxied need to use this network
  proxy_net:
    external: true
